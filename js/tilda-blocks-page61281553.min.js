window.isMobile = !1;
if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
	window.isMobile = !0;
}
window.isTablet = /(ipad|tablet|(android(?!.*mobile))|(windows(?!.*phone)(.*touch))|kindle|playbook|silk|(puffin(?!.*(IP|AP|WP))))/i.test(navigator.userAgent);
function t_throttle(fn, threshhold, scope) {
	var last;
	var deferTimer;
	threshhold || (threshhold = 250);
	return function () {
		var context = scope || this;
		var now = +new Date();
		var args = arguments;
		if (last && now < last + threshhold) {
			clearTimeout(deferTimer);
			deferTimer = setTimeout(function () {
				last = now;
				fn.apply(context, args);
			}, threshhold);
		} else {
			last = now;
			fn.apply(context, args);
		}
	};
}
function t228__init(recid) {
	var rec = document.getElementById('rec' + recid);
	if (!rec) return;
	var menuBlock = rec.querySelector('.t228');
	var mobileMenu = rec.querySelector('.t228__mobile');
	var menuSubLinkItems = rec.querySelectorAll('.t-menusub__link-item');
	var rightBtn = rec.querySelector('.t228__right_buttons_but .t-btn');
	var mobileMenuPosition = mobileMenu ? mobileMenu.style.position || window.getComputedStyle(mobileMenu).position : '';
	var mobileMenuDisplay = mobileMenu ? mobileMenu.style.display || window.getComputedStyle(mobileMenu).display : '';
	var isFixedMobileMenu = mobileMenuPosition === 'fixed' && mobileMenuDisplay === 'block';
	var overflowEvent = document.createEvent('Event');
	var noOverflowEvent = document.createEvent('Event');
	overflowEvent.initEvent('t228_overflow', !0, !0);
	noOverflowEvent.initEvent('t228_nooverflow', !0, !0);
	if (menuBlock) {
		menuBlock.addEventListener('t228_overflow', function () {
			t228_checkOverflow(recid);
		});
		menuBlock.addEventListener('t228_nooverflow', function () {
			t228_checkNoOverflow(recid);
		});
	}
	rec.addEventListener('click', function (e) {
		var targetLink = e.target.closest('.t-menusub__target-link');
		if (targetLink && window.isMobile && window.innerWidth <= 980) {
			if (targetLink.classList.contains('t-menusub__target-link_active')) {
				if (menuBlock) menuBlock.dispatchEvent(overflowEvent);
			} else {
				if (menuBlock) menuBlock.dispatchEvent(noOverflowEvent);
			}
		}
		var currentLink = e.target.closest('.t-menu__link-item:not(.tooltipstered):not(.t-menusub__target-link):not(.t794__tm-link):not(.t966__tm-link):not(.t978__tm-link):not(.t978__menu-link)');
		if (currentLink && mobileMenu && isFixedMobileMenu) mobileMenu.click();
	});
	Array.prototype.forEach.call(menuSubLinkItems, function (linkItem) {
		linkItem.addEventListener('click', function () {
			if (mobileMenu && isFixedMobileMenu) mobileMenu.click();
		});
	});
	if (rightBtn) {
		rightBtn.addEventListener('click', function () {
			if (mobileMenu && isFixedMobileMenu) mobileMenu.click();
		});
	}
	if (menuBlock) {
		menuBlock.addEventListener('showME601a', function () {
			var menuLinks = rec.querySelectorAll('.t966__menu-link');
			Array.prototype.forEach.call(menuLinks, function (menuLink) {
				menuLink.addEventListener('click', function () {
					if (mobileMenu && isFixedMobileMenu) mobileMenu.click();
				});
			});
		});
	}
	t_onFuncLoad('t_throttle', function () {
		var onResizeThrottled = t_throttle(function () {
			t228_setWidth(recid);
		}, 50);
		window.addEventListener('resize', onResizeThrottled);
	});
}
function t228_checkOverflow(recid) {
	var rec = document.getElementById('rec' + recid);
	var menu = rec ? rec.querySelector('.t228') : null;
	if (!menu) return;
	var mobileContainer = document.querySelector('.t228__mobile_container');
	var mobileContainerHeight = t228_getFullHeight(mobileContainer);
	var windowHeight = document.documentElement.clientHeight;
	var menuPosition = menu.style.position || window.getComputedStyle(menu).position;
	if (menuPosition === 'fixed') {
		menu.classList.add('t228__overflow');
		menu.style.setProperty('height', windowHeight - mobileContainerHeight + 'px', 'important');
	}
}
function t228_checkNoOverflow(recid) {
	var rec = document.getElementById('rec' + recid);
	if (!rec) return !1;
	var menu = rec.querySelector('.t228');
	var menuPosition = menu ? menu.style.position || window.getComputedStyle(menu).position : '';
	if (menuPosition === 'fixed') {
		if (menu) menu.classList.remove('t228__overflow');
		if (menu) menu.style.height = 'auto';
	}
}
function t228_setWidth(recid) {
	var rec = document.getElementById('rec' + recid);
	if (!rec) return;
	var menuCenterSideList = rec.querySelectorAll('.t228__centerside');
	Array.prototype.forEach.call(menuCenterSideList, function (menuCenterSide) {
		menuCenterSide.classList.remove('t228__centerside_hidden');
	});
	if (window.innerWidth <= 980) return;
	var menuBlocks = rec.querySelectorAll('.t228');
	Array.prototype.forEach.call(menuBlocks, function (menu) {
		var maxWidth;
		var centerWidth = 0;
		var paddingWidth = 40;
		var leftSide = menu.querySelector('.t228__leftside');
		var rightSide = menu.querySelector('.t228__rightside');
		var menuList = menu.querySelector('.t228__list');
		var mainContainer = menu.querySelector('.t228__maincontainer');
		var leftContainer = menu.querySelector('.t228__leftcontainer');
		var rightContainer = menu.querySelector('.t228__rightcontainer');
		var centerContainer = menu.querySelector('.t228__centercontainer');
		var centerContainerLi = centerContainer ? centerContainer.querySelectorAll('li') : [];
		var leftContainerWidth = t228_getFullWidth(leftContainer);
		var rightContainerWidth = t228_getFullWidth(rightContainer);
		var mainContainerWidth = mainContainer ? mainContainer.offsetWidth : 0;
		var dataAlign = menu.getAttribute('data-menu-items-align');
		var isDataAlignCenter = dataAlign === 'center' || dataAlign === null;
		maxWidth = leftContainerWidth >= rightContainerWidth ? leftContainerWidth : rightContainerWidth;
		maxWidth = Math.ceil(maxWidth);
		Array.prototype.forEach.call(centerContainerLi, function (li) {
			centerWidth += t228_getFullWidth(li);
		});
		leftSide.style.minWidth = '';
		rightSide.style.minWidth = '';
		if (mainContainerWidth - (maxWidth * 2 + paddingWidth * 2) > centerWidth + 20) {
			if (isDataAlignCenter) {
				if (leftSide) leftSide.style.minWidth = maxWidth + 'px';
				if (rightSide) rightSide.style.minWidth = maxWidth + 'px';
			}
		} else {
			if (leftSide) leftSide.style.minWidth = maxWidth + '';
			if (rightSide) rightSide.style.minWidth = maxWidth + '';
		}
		if (menuList && menuList.classList.contains('t228__list_hidden')) menuList.classList.remove('t228__list_hidden');
	});
}
function t228_getFullWidth(el) {
	if (!el) return 0;
	var marginLeft = el.style.marginLeft || window.getComputedStyle(el).marginLeft;
	var marginRight = el.style.marginRight || window.getComputedStyle(el).marginRight;
	marginLeft = parseInt(marginLeft, 10) || 0;
	marginRight = parseInt(marginRight, 10) || 0;
	return el.offsetWidth + marginLeft + marginRight;
}
function t228_getFullHeight(el) {
	if (!el) return 0;
	var marginTop = el.style.marginTop || window.getComputedStyle(el).marginTop;
	var marginBottom = el.style.marginBottom || window.getComputedStyle(el).marginBottom;
	marginTop = parseInt(marginTop, 10) || 0;
	marginBottom = parseInt(marginBottom, 10) || 0;
	return el.offsetHeight + marginTop + marginBottom;
}
function t975_init(recid) {
	var rec = document.getElementById('rec' + recid);
	if (!rec) return;
	var tildaCopy = document.getElementById('tildacopy');
	var menu = rec.querySelector('.t975');
	t_onFuncLoad('t_menu__highlightActiveLinks', function () {
		t_menu__highlightActiveLinks('.t975__list-item a');
	});
	if (menu) menu.classList.remove('t975__beforeready');
	t975_checkAnchorLinks(recid, '.t975__list-item a');
	var isIphone = t975_detectIphone();
	var scrollHeight = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight);
	if ((menu && menu.getAttribute('data-hidemenuonscroll')) || isIphone) {
		t975_handleScroll(menu, tildaCopy);
	}
	if (tildaCopy && scrollHeight > document.documentElement.clientHeight) {
		t975_addCopyrightMargin(menu, tildaCopy);
		t975_handleScroll(menu, tildaCopy);
	}
	window.addEventListener('resize', function () {
		t975_changeCopyrightMargin(menu, tildaCopy);
	});
}
function t975_addCopyrightMargin(menu, tildaCopy) {
	if (!tildaCopy || !menu) return;
	var paddingElement = document.createElement('div');
	paddingElement.style.backgroundColor = '#000';
	paddingElement.style.height = menu.offsetHeight + 'px';
	paddingElement.classList.add('t-tildalabel-padding');
	document.body.appendChild(paddingElement);
}
function t975_changeCopyrightMargin(menu, tildaCopy) {
	var paddingElement = document.querySelector('.t-tildalabel-padding');
	if (!paddingElement || !tildaCopy || !menu) return;
	paddingElement.style.height = menu.offsetHeight + 'px';
}
function t975_detectIphone() {
	var isIphone = /iPhone/.test(navigator.userAgent) && !window.MSStream;
	var aspect = window.screen.width / window.screen.height;
	var iphoneAspect = '0.462';
	if (isIphone && aspect.toFixed(3) === iphoneAspect) {
		return !0;
	}
}
function t975_checkAnchorLinks(recid, selector) {
	var rec = document.getElementById('rec' + recid);
	var anchorSelector = selector + '[href*="#"]:not(.tooltipstered)';
	var navLinks = rec ? rec.querySelectorAll(anchorSelector) : [];
	if (navLinks.length) {
		t_onFuncLoad('t_menu__updateActiveLinks', function () {
			t_menu__updateActiveLinks(navLinks, selector);
		});
	}
}
function t975_handleScroll(menu) {
	var lastScrollTop = 0;
	var delta = 5;
	var timerID;
	var diff;
	window.addEventListener('scroll', function () {
		var scrollHeight = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight);
		var isClicked = menu ? menu.getAttribute('data-clicked-link') : '';
		var currentScrollTop = window.pageYOffset;
		if (Math.abs(lastScrollTop - currentScrollTop) <= delta || window.pageYOffset < 0 || window.pageYOffset > scrollHeight - window.innerHeight) {
			return;
		}
		if (menu && menu.getAttribute('data-hidemenuonscroll') && !isClicked) {
			var menuHeight = menu.offsetHeight;
			var currentTransformValue = menu.style.transform;
			if (currentScrollTop > lastScrollTop && window.pageYOffset <= scrollHeight - (window.innerHeight + menuHeight)) {
				diff = 0;
				if (currentTransformValue) {
					diff = parseInt(currentTransformValue.replace('translateY(', ''), 10);
				}
				clearInterval(timerID);
				timerID = setInterval(function () {
					menu.style.transform = 'translateY(' + diff + 'px)';
					diff += menuHeight / 50;
					if (diff >= menuHeight) {
						menu.style.transform = 'translateY(' + menuHeight + 'px)';
						clearInterval(timerID);
					}
				});
			} else {
				diff = menuHeight;
				if (currentTransformValue) {
					diff = parseInt(currentTransformValue.replace('translateY(', ''), 10);
				}
				clearInterval(timerID);
				timerID = setInterval(function () {
					menu.style.transform = 'translateY(' + diff + 'px)';
					diff -= menuHeight / 50;
					if (diff <= 0) {
						menu.style.transform = 'translateY(0px)';
						clearInterval(timerID);
					}
				});
			}
		}
		lastScrollTop = currentScrollTop;
	});
}
function t819_init(recid) {
	var rec = document.querySelector('#rec' + recid);
	if (!rec) return;
	var currentMode = document.querySelector('.t-records').getAttribute('data-tilda-mode');
	var tabs = rec.querySelectorAll('.t819__tab');
	var select = rec.querySelector('.t819__select');
	var content = rec.querySelectorAll('.t819__content');
	if (!tabs.length) return;
	if (!content.length) return;
	if (currentMode !== 'edit' && currentMode !== 'preview') {
		t819_scrollToTabs(recid);
		window.onload = function () {
			t819_scrollToTabs(recid);
		};
	}
	t819_showTabByUrl(recid, tabs, content, select);
	t819_showTab(recid, tabs, content, currentMode);
	t819_showTabMobile(recid, select, content, currentMode);
}
function t819_showTab(recid, tabs, content, currentMode) {
	var rec = document.querySelector('#rec' + recid);
	if (!rec) return;
	Array.prototype.forEach.call(tabs, function (tabItem) {
		tabItem.addEventListener('click', function (event) {
			var tabNumber = this.getAttribute('data-tab-number');
			rec.querySelector('.t819__wrapper').setAttribute('data-tab-current', tabNumber);
			Array.prototype.forEach.call(tabs, function (tabItem) {
				tabItem.classList.remove('t819__tab_active');
				var button = tabItem.querySelector('.t817__tab-name');
				if (button) {
					button.setAttribute('tabindex', -1);
					button.setAttribute('aria-selected', !1);
				}
			});
			Array.prototype.forEach.call(content, function (contentItem) {
				contentItem.classList.remove('t819__content_active');
				if (parseInt(contentItem.getAttribute('data-tab-content-number'), 10) === parseInt(tabNumber, 10)) {
					contentItem.classList.add('t819__content_active');
				}
			});
			tabItem.classList.add('t819__tab_active');
			var currentButton = tabItem.querySelector('.t817__tab-name');
			if (currentButton) {
				currentButton.setAttribute('tabindex', 0);
				currentButton.setAttribute('aria-selected', !0);
			}
			t819_changeUrl(recid, currentMode, tabNumber);
			t819__updateLazyLoad(currentMode);
			event.preventDefault();
		});
		tabItem.addEventListener('keydown', function (event) {
			var currentIndex = Number(rec.querySelector('.t819__wrapper').getAttribute('data-tab-current'));
			var prevent = !1;
			switch (event.key) {
				case 'Left':
				case 'ArrowLeft':
					currentIndex = currentIndex === 1 ? tabs.length : currentIndex - 1;
					t819_showActiveTabFromKeyboard(recid, tabs, content, currentMode, currentIndex);
					prevent = !0;
					break;
				case 'Right':
				case 'ArrowRight':
					currentIndex = currentIndex === tabs.length ? 1 : currentIndex + 1;
					t819_showActiveTabFromKeyboard(recid, tabs, content, currentMode, currentIndex);
					prevent = !0;
					break;
				default:
					break;
			}
			if (prevent) {
				event.stopPropagation();
				event.preventDefault();
			}
		});
	});
}
function t819_showActiveTabFromKeyboard(recid, tabs, content, currentMode, currentIndex) {
	var rec = document.querySelector('#rec' + recid);
	Array.prototype.forEach.call(tabs, function (tabItem) {
		tabItem.classList.remove('t819__tab_active');
		var button = tabItem.querySelector('.t819__tab-name');
		if (button) {
			button.setAttribute('tabindex', -1);
			button.setAttribute('aria-selected', !1);
		}
	});
	Array.prototype.forEach.call(content, function (contentItem) {
		contentItem.classList.remove('t819__content_active');
	});
	var currentTab = rec.querySelector('[data-tab-number="' + currentIndex + '"]');
	if (!currentTab) return;
	currentTab.classList.add('t819__tab_active');
	var currentButton = currentTab.querySelector('.t819__tab-name');
	if (currentButton) {
		currentButton.setAttribute('tabindex', 0);
		currentButton.setAttribute('aria-selected', !0);
		currentButton.focus();
	}
	var currentContent = rec.querySelector('[data-tab-content-number="' + currentIndex + '"]');
	if (currentContent) currentContent.classList.add('t819__content_active');
	var tabList = rec.querySelector('.t819__wrapper');
	if (tabList) tabList.setAttribute('data-tab-current', currentIndex);
	t819_changeUrl(recid, currentMode, currentIndex);
	t819__updateLazyLoad(currentMode);
}
function t819_changeUrl(recid, currentMode, index) {
	t819_removeUrl();
	if (currentMode !== 'edit' && currentMode !== 'preview') {
		if (typeof history.replaceState === 'function') {
			window.history.replaceState('', '', window.location.href + '#!/tab/' + recid + '-' + index);
		}
	}
}
function t819__updateLazyLoad(currentMode) {
	if (!currentMode) {
		if (window.lazy === 'y' || document.querySelector('#allrecords').getAttribute('data-tilda-lazy') === 'yes') {
			t_onFuncLoad('t_lazyload_update', function () {
				t_lazyload_update();
			});
		}
	}
}
function t819_showTabMobile(recid, select, content, currentMode) {
	select.addEventListener('change', function (event) {
		var tabNumberMobile = this.value;
		Array.prototype.forEach.call(content, function (contentItem) {
			contentItem.classList.remove('t819__content_active');
			if (parseInt(contentItem.getAttribute('data-tab-content-number'), 10) === parseInt(tabNumberMobile, 10)) {
				contentItem.classList.add('t819__content_active');
			}
		});
		t819_removeUrl();
		if (currentMode !== 'edit' && currentMode !== 'preview') {
			if (typeof history.replaceState === 'function') {
				window.history.replaceState('', '', window.location.href + '#!/tab/' + recid + '-' + tabNumberMobile);
			}
		}
		if (!currentMode) {
			if (window.lazy === 'y' || document.querySelector('#allrecords').getAttribute('data-tilda-lazy') === 'yes') {
				t_onFuncLoad('t_lazyload_update', function () {
					t_lazyload_update();
				});
			}
		}
		event.preventDefault();
	});
}
function t819_showTabByUrl(recid, tabs, content, select) {
	var rec = document.querySelector('#rec' + recid);
	var currentUrl = window.location.href;
	var tabIndexNumber = currentUrl.indexOf(recid + '-');
	var tabIndex = currentUrl.substring(tabIndexNumber + recid.length + 1);
	if (tabIndexNumber !== -1) {
		Array.prototype.forEach.call(tabs, function (tabItem) {
			if (parseInt(tabItem.getAttribute('data-tab-number'), 10) === parseInt(tabIndex, 10)) {
				tabItem.classList.add('t819__tab_active');
				tabItem.querySelector('.t819__tab-name').setAttribute('tabindex', 0);
				tabItem.querySelector('.t819__tab-name').setAttribute('aria-selected', !0);
			}
		});
		Array.prototype.forEach.call(content, function (contentItem) {
			if (parseInt(contentItem.getAttribute('data-tab-content-number'), 10) === parseInt(tabIndex, 10)) {
				contentItem.classList.add('t819__content_active');
			}
		});
		select.value = tabIndex;
		rec.querySelector('.t819__wrapper').setAttribute('data-tab-current', tabIndex);
	} else {
		tabs[0].classList.add('t819__tab_active');
		content[0].classList.add('t819__content_active');
		rec.querySelector('.t819__wrapper').setAttribute('data-tab-current', 1);
		tabs[0].querySelector('.t819__tab-name').setAttribute('tabindex', 0);
		tabs[0].querySelector('.t819__tab-name').setAttribute('aria-selected', !0);
	}
}
function t819_scrollToTabs(recid) {
	var currentUrl = window.location.href;
	var tabIndexNumber = currentUrl.indexOf('#!/tab/');
	var tabIndexNumberStart = currentUrl.indexOf('tab/');
	if (parseInt(tabIndexNumber, 10) !== -1) {
		var tabRecord = currentUrl.substring(tabIndexNumberStart + 4, tabIndexNumberStart + 4 + recid.length);
		if (parseInt(tabRecord, 10) === parseInt(recid, 10)) {
			var tabBlock = document.querySelector('#rec' + tabRecord).querySelector('.t819');
			var targetOffset = tabBlock.getBoundingClientRect().top + window.pageYOffset;
			if (window.innerWidth > 960) {
				var target = targetOffset - 200;
			} else {
				var target = targetOffset - 100;
			}
			t819_scrollToEl(target, 300);
		}
	}
}
function t819_removeUrl() {
	var currentUrl = window.location.href;
	var indexToRemove = currentUrl.indexOf('#!/tab/');
	if (/iPhone|iPad|iPod/i.test(navigator.userAgent) && indexToRemove < 0) {
		indexToRemove = currentUrl.indexOf('%23!/tab/');
	}
	currentUrl = currentUrl.substring(0, indexToRemove);
	if (parseInt(indexToRemove, 10) !== -1) {
		if (typeof history.replaceState === 'function') {
			window.history.replaceState('', '', currentUrl);
		}
	}
}
function t819_scrollToEl(elTopPos, duration) {
	if (elTopPos === window.pageYOffset) return !1;
	var difference = window.pageYOffset;
	var cashedDiff = window.pageYOffset;
	var step = (10 * (elTopPos || window.pageYOffset)) / duration;
	var timer = setInterval(function () {
		if (cashedDiff > elTopPos) {
			difference -= step;
		} else {
			difference += step;
		}
		window.scrollTo(0, difference);
		document.body.setAttribute('data-scrollable', 'true');
		if (cashedDiff > elTopPos && window.pageYOffset <= elTopPos) {
			document.body.removeAttribute('data-scrollable');
			clearInterval(timer);
		} else if (cashedDiff <= elTopPos && window.pageYOffset >= elTopPos) {
			document.body.removeAttribute('data-scrollable');
			clearInterval(timer);
		}
	}, 10);
	var timer2 = setTimeout(function () {
		clearInterval(timer);
		document.body.removeAttribute('data-scrollable');
		clearTimeout(timer2);
	}, duration * 2);
}
function t651_initPopup(recId) {
	var rec = document.getElementById('rec' + recId);
	if (!rec) return;
	var container = rec.querySelector('.t651');
	if (!container) return;
	// if (window.isMobile && !window.isTablet) {
	// 	var phone = rec.querySelector('.t651__phone');
	// 	if (!phone) return;
	// 	var phoneText = phone.textContent.replace(/\s+/g, '');
	// 	var button = rec.querySelector('.t651__btn');
	// 	var buttonWrapper = rec.querySelector('.t651__btn_wrapper');
	// 	var buttonText = rec.querySelector('.t651__btn-text');
	// 	button.addEventListener('click', function () {
	// 		window.location.href = 'tel:' + phoneText;
	// 		if (buttonWrapper) buttonWrapper.classList.remove('t651__btn_animate');
	// 		if (buttonText) buttonText.style.display = 'none';
	// 	});
	// 	return;
	// }
	rec.setAttribute('data-animationappear', 'off');
	rec.style.opacity = 1;
	var popup = rec.querySelector('.t651__popup');
	var analitics = popup.getAttribute('data-track-popup');
	var hook = 'TildaCallBackWidget' + recId;
	var button = rec.querySelector('.t651__btn');
	button.addEventListener('click', function (event) {
		if (button.classList.contains('t651__btn_active')) {
			t651_closePopup();
			return;
		}
		container.classList.add('t651_active');
		button.classList.add('t651__btn_active');
		t651_showPopup(recId);
		event.preventDefault();
		if (analitics && window.Tilda) {
			Tilda.sendEventToStatistics(analitics, hook);
		}
	});
}
function t651_showPopup(recId) {
	var rec = document.getElementById('rec' + recId);
	if (!rec) return;
	var popup = rec.querySelector('.t651__popup');
	if (!popup) return;
	var buttonWrapper = rec.querySelector('.t651__btn_wrapper');
	var buttonText = rec.querySelector('.t651__btn-text');
	if (buttonWrapper) buttonWrapper.classList.remove('t651__btn_animate');
	if (buttonText) buttonText.style.display = 'none';
	popup.style.display = 'block';
	setTimeout(function () {
		popup.classList.add('t651__popup_show');
	}, 50);
	document.addEventListener('keydown', t651_escClosePopup);
}
function t651_escClosePopup(event) {
	if (event.key === 'Escape') t651_closePopup();
}
function t651_closePopup() {
	var blocks = document.querySelectorAll('.t651.t651_active');
	var buttons = document.querySelectorAll('.t651__btn.t651__btn_active');
	var popups = document.querySelectorAll('.t651__popup.t651__popup_show');
	for (var i = 0; i < blocks.length; i++) {
		blocks[i].classList.remove('t651_active');
	}
	for (var i = 0; i < buttons.length; i++) {
		buttons[i].classList.remove('t651__btn_active');
	}
	for (var i = 0; i < popups.length; i++) {
		popups[i].classList.remove('t651__popup_show');
	}
	setTimeout(function () {
		var popupHide = document.querySelectorAll('.t651__popup:not(.t651__popup_show)');
		for (var i = 0; i < popupHide.length; i++) {
			popupHide[i].style.display = 'none';
		}
	}, 300);
	document.removeEventListener('keydown', t651_escClosePopup);
}
function t657_init(recid) {
	var rec = document.querySelector('#rec' + recid);
	if (!rec) return;
	var wrapperBlock = rec.querySelector('.t657');
	var closeButton = rec.querySelector('.t657__btn');
	var closeIcon = rec.querySelector('.t657__icon-close');
	var closeSvg = rec.querySelector('.t657__icon-close svg');
	var storageItem = wrapperBlock.getAttribute('data-storage-item');
	var lastOpen;
	try {
		lastOpen = localStorage.getItem(storageItem);
	} catch (error) {
		console.log('Your web browser does not support localStorage. Error status: ', error);
	}
	if (!lastOpen) {
		wrapperBlock.classList.remove('t657_closed');
	}
	wrapperBlock.addEventListener('click', function (event) {
		if (event.target === closeButton || event.target === closeIcon || event.target === closeSvg) {
			wrapperBlock.classList.add('t657_closed');
			try {
				localStorage.setItem(storageItem, Math.floor(Date.now() / 1000));
			} catch (error) {
				console.log('Your web browser does not support localStorage. Error status: ', error);
			}
			event.preventDefault();
		}
	});
}
window.requestAnimationFrame = (function () {
	return (
		window.requestAnimationFrame ||
		window.webkitRequestAnimationFrame ||
		window.mozRequestAnimationFrame ||
		window.oRequestAnimationFrame ||
		window.msRequestAnimationFrame ||
		function (callback) {
			window.setTimeout(callback, 1000 / 60);
		}
	);
})();
function t270_scroll(hash, offset) {
	if (!hash) return;
	t270_checkLoad(hash, offset);
	var excludeHashes = ['#!/tproduct/', '#!/tab/', '#opencart'];
	if (excludeHashes.includes(hash)) {
		return !0;
	}
	var isHistoryChangeAllowed = window.location.hash !== hash;
	var wrapperBlock = document.querySelector('.t270');
	var dontChangeHistory = wrapperBlock ? Boolean(wrapperBlock.getAttribute('data-history-disabled')) : !1;
	t270_scrollToEl(hash, offset);
	if (!dontChangeHistory && isHistoryChangeAllowed) {
		if (history.pushState) {
			history.pushState(null, null, hash);
		} else {
			window.location.hash = hash;
		}
		isHistoryChangeAllowed = !1;
	}
	return !0;
}
function t270_checkLoad(hash, offset) {
	if (window.t270_loadChecked) return;
	var sliderWrappers = document.body.querySelectorAll('.t-slds__items-wrapper');
	if (!sliderWrappers.length) return;
	var lastWrapper = sliderWrappers[sliderWrappers.length - 1];
	var sliderImgs = lastWrapper ? lastWrapper.querySelectorAll('.t-slds__bgimg') : [];
	var lastImg = sliderImgs[sliderImgs.length - 1];
	var imageUrl = lastImg ? window.getComputedStyle(lastImg).backgroundImage : '';
	imageUrl = imageUrl.substring(5, imageUrl.length - 2);
	var preloaderImg = document.createElement('img');
	preloaderImg.src = imageUrl ? imageUrl : '';
	preloaderImg.addEventListener('load', function () {
		t270_scroll(hash, offset);
		window.t270_loadChecked = !0;
	});
}
function t270_scrollToEl(hash, offset) {
	var SCROLL_DURATION_MS = 500;
	var body = document.body;
	if (body.getAttribute('data-scroll')) return;
	var scrollTargetY = t270_getTarget(hash, offset);
	if (isNaN(scrollTargetY)) return;
	var canSmoothScroll = window.CSS && window.CSS.supports('scroll-behavior', 'smooth') && 'scrollBehavior' in document.documentElement.style;
	var userAgent = navigator.userAgent.toLowerCase();
	var isAndroid = userAgent.indexOf('android') !== -1;
	if (window.isMobile && !isAndroid && canSmoothScroll) {
		body.setAttribute('data-scroll', 'true');
		window.scrollTo({ left: 0, top: scrollTargetY, behavior: 'smooth' });
		setTimeout(function () {
			body.removeAttribute('data-scroll');
		}, SCROLL_DURATION_MS);
	} else {
		t270_smoothScrollTo(scrollTargetY, SCROLL_DURATION_MS);
	}
}
function t270_smoothScrollTo(targetY, duration = 500) {
	var body = document.body;
	var startY = window.scrollY || window.pageYOffset;
	var deltaY = targetY - startY;
	var startTime = performance.now();
	function easeInOutQuad(t) {
		return Math.pow(t, 2);
	}
	function scroll() {
		var currentTime = performance.now();
		var elapsedTime = Math.min((currentTime - startTime) / duration, 1);
		var ease = easeInOutQuad(elapsedTime);
		window.scrollTo(0, startY + deltaY * ease);
		if (elapsedTime < 1) {
			requestAnimationFrame(scroll);
		} else {
			body.removeAttribute('data-scroll');
			body.removeAttribute('data-scrollable');
			window.scrollTo(0, targetY);
		}
	}
	body.setAttribute('data-scroll', 'true');
	body.setAttribute('data-scrollable', 'true');
	requestAnimationFrame(scroll);
}
function t270_getTarget(hash, offset) {
	var target;
	try {
		if (hash.substring(0, 1) === '#') {
			target = document.getElementById(hash.substring(1));
		} else {
			target = document.querySelector(hash);
		}
	} catch (event) {
		console.log('Exception t270: ' + event.message);
		return;
	}
	if (!target) {
		target = document.querySelector('a[name="' + hash.substr(1) + '"], div[id="' + hash.substr(1) + '"]');
		if (!target) return;
	}
	target = parseInt(target.getBoundingClientRect().top + window.pageYOffset - offset, 10);
	target = Math.max(target, 0);
	return target;
}
